data_path:
  data_store: "./static/data/"
  inbound: "inbound"
  outbound: "outbound"
  label_data: "label_data"
  upload_data: "upload_data"
format:
  date: "yyyymmdd"
model:
  name: "IRIS Training Pipeline"
  root: /home/colin/projects/docker_projects/mlops/examples/iris
  ct_pipeline:
    components:
      data_gen:
        module_file: data_gen/__init__.py
        args:
          url: "http://localhost:3000/data"
          x_headers:
            - sepal-length
            - sepal-width
            - petal-length
            - petal-width
          y_header: species
          test_size: 0.2
      data_validation:
        module_file: data_validation/__init__.py
      feature_transform:
        module_file: feature_transform/__init__.py
        args:
          transform_approach: min-max
      logistic_regression:
        module_file: logistic_regression/__init__.py
      linear_discriminant_analysis:
        module_file: linear_discriminant_analysis/__init__.py
      model_eval:
        module_file: model_eval/__init__.py
      model_pub:
        module_file: model_pub/__init__.py
        args:
          model_registry_name: IRIS
    dag: # component: downstream components separated by ','
      data_gen:
        - data_validation
        - feature_transform
        - logistic_regression
        - linear_discriminant_analysis
        - model_eval
        - model_pub
      data_validation:
        - logistic_regression
        - linear_discriminant_analysis
      feature_transform:
        - logistic_regression
        - linear_discriminant_analysis
      logistic_regression:
        - model_eval
      linear_discriminant_analysis:
        - model_eval
      model_eval:
        - model_pub
serving:
  model_name: IRIS
data_monitoring:
  data_counter_file: "data_val_counter"
  count_frequency: 200
performance_monitoring:
  perf_counter_file: "perf_eval_counter"
  count_frequency: 1000
mlflow:
  exp_id: "Default"
  tracking_uri: http://localhost:5000
  registry_uri: http://localhost:5000
